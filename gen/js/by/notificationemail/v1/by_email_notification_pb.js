// source: by/notificationemail/v1/by_email_notification.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.by.notificationemail.v1.EmailData', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.EmailDataParams', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.EmailStruct', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.SendEmailInfoResponse', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.SendEmailRequest', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.SendEmailResponse', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse', null, global);
goog.exportSymbol('proto.by.notificationemail.v1.SmtpData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.EmailStruct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.EmailStruct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.EmailStruct.displayName = 'proto.by.notificationemail.v1.EmailStruct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.EmailData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.by.notificationemail.v1.EmailData.repeatedFields_, null);
};
goog.inherits(proto.by.notificationemail.v1.EmailData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.EmailData.displayName = 'proto.by.notificationemail.v1.EmailData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.EmailDataParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.by.notificationemail.v1.EmailDataParams.repeatedFields_, null);
};
goog.inherits(proto.by.notificationemail.v1.EmailDataParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.EmailDataParams.displayName = 'proto.by.notificationemail.v1.EmailDataParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.SmtpData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.SmtpData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.SmtpData.displayName = 'proto.by.notificationemail.v1.SmtpData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.displayName = 'proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.SendEmailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.SendEmailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.SendEmailRequest.displayName = 'proto.by.notificationemail.v1.SendEmailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.SendEmailInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.SendEmailInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.SendEmailInfoResponse.displayName = 'proto.by.notificationemail.v1.SendEmailInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.SendEmailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.SendEmailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.SendEmailResponse.displayName = 'proto.by.notificationemail.v1.SendEmailResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.displayName = 'proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.EmailStruct.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.EmailStruct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.EmailStruct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.EmailStruct.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailStruct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.EmailStruct;
  return proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.EmailStruct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.EmailStruct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.EmailStruct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailStruct.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailStruct} returns this
 */
proto.by.notificationemail.v1.EmailStruct.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailStruct.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailStruct} returns this
 */
proto.by.notificationemail.v1.EmailStruct.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.by.notificationemail.v1.EmailData.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.EmailData.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.EmailData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.EmailData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.EmailData.toObject = function(includeInstance, msg) {
  var f, obj = {
    toList: jspb.Message.toObjectList(msg.getToList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    ccList: jspb.Message.toObjectList(msg.getCcList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    bbcList: jspb.Message.toObjectList(msg.getBbcList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    replyToList: jspb.Message.toObjectList(msg.getReplyToList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    subject: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 6, ""),
    text: jspb.Message.getFieldWithDefault(msg, 7, ""),
    html: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.EmailData}
 */
proto.by.notificationemail.v1.EmailData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.EmailData;
  return proto.by.notificationemail.v1.EmailData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.EmailData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.EmailData}
 */
proto.by.notificationemail.v1.EmailData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addTo(value);
      break;
    case 2:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addCc(value);
      break;
    case 3:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addBbc(value);
      break;
    case 4:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addReplyTo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.EmailData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.EmailData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.EmailData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.EmailData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getCcList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getBbcList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getReplyToList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHtml();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * repeated EmailStruct to = 1;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailData.prototype.getToList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 1));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
*/
proto.by.notificationemail.v1.EmailData.prototype.setToList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailData.prototype.addTo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.clearToList = function() {
  return this.setToList([]);
};


/**
 * repeated EmailStruct cc = 2;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailData.prototype.getCcList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 2));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
*/
proto.by.notificationemail.v1.EmailData.prototype.setCcList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailData.prototype.addCc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.clearCcList = function() {
  return this.setCcList([]);
};


/**
 * repeated EmailStruct bbc = 3;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailData.prototype.getBbcList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 3));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
*/
proto.by.notificationemail.v1.EmailData.prototype.setBbcList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailData.prototype.addBbc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.clearBbcList = function() {
  return this.setBbcList([]);
};


/**
 * repeated EmailStruct reply_to = 4;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailData.prototype.getReplyToList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 4));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
*/
proto.by.notificationemail.v1.EmailData.prototype.setReplyToList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailData.prototype.addReplyTo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.clearReplyToList = function() {
  return this.setReplyToList([]);
};


/**
 * optional string subject = 5;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailData.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tag = 6;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailData.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string text = 7;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailData.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string html = 8;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailData.prototype.getHtml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailData} returns this
 */
proto.by.notificationemail.v1.EmailData.prototype.setHtml = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.by.notificationemail.v1.EmailDataParams.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.EmailDataParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.EmailDataParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.EmailDataParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromList: jspb.Message.toObjectList(msg.getFromList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    toList: jspb.Message.toObjectList(msg.getToList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    ccList: jspb.Message.toObjectList(msg.getCcList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    bbcList: jspb.Message.toObjectList(msg.getBbcList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    replyToList: jspb.Message.toObjectList(msg.getReplyToList(),
    proto.by.notificationemail.v1.EmailStruct.toObject, includeInstance),
    subject: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 7, ""),
    text: jspb.Message.getFieldWithDefault(msg, 8, ""),
    html: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.EmailDataParams}
 */
proto.by.notificationemail.v1.EmailDataParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.EmailDataParams;
  return proto.by.notificationemail.v1.EmailDataParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.EmailDataParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.EmailDataParams}
 */
proto.by.notificationemail.v1.EmailDataParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addFrom(value);
      break;
    case 2:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addTo(value);
      break;
    case 3:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addCc(value);
      break;
    case 4:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addBbc(value);
      break;
    case 5:
      var value = new proto.by.notificationemail.v1.EmailStruct;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailStruct.deserializeBinaryFromReader);
      msg.addReplyTo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.EmailDataParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.EmailDataParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.EmailDataParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getToList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getCcList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getBbcList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getReplyToList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.by.notificationemail.v1.EmailStruct.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHtml();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * repeated EmailStruct from = 1;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getFromList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 1));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
*/
proto.by.notificationemail.v1.EmailDataParams.prototype.setFromList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.addFrom = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.clearFromList = function() {
  return this.setFromList([]);
};


/**
 * repeated EmailStruct to = 2;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getToList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 2));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
*/
proto.by.notificationemail.v1.EmailDataParams.prototype.setToList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.addTo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.clearToList = function() {
  return this.setToList([]);
};


/**
 * repeated EmailStruct cc = 3;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getCcList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 3));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
*/
proto.by.notificationemail.v1.EmailDataParams.prototype.setCcList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.addCc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.clearCcList = function() {
  return this.setCcList([]);
};


/**
 * repeated EmailStruct bbc = 4;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getBbcList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 4));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
*/
proto.by.notificationemail.v1.EmailDataParams.prototype.setBbcList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.addBbc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.clearBbcList = function() {
  return this.setBbcList([]);
};


/**
 * repeated EmailStruct reply_to = 5;
 * @return {!Array<!proto.by.notificationemail.v1.EmailStruct>}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getReplyToList = function() {
  return /** @type{!Array<!proto.by.notificationemail.v1.EmailStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.by.notificationemail.v1.EmailStruct, 5));
};


/**
 * @param {!Array<!proto.by.notificationemail.v1.EmailStruct>} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
*/
proto.by.notificationemail.v1.EmailDataParams.prototype.setReplyToList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.by.notificationemail.v1.EmailStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.by.notificationemail.v1.EmailStruct}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.addReplyTo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.by.notificationemail.v1.EmailStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.clearReplyToList = function() {
  return this.setReplyToList([]);
};


/**
 * optional string subject = 6;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string tag = 7;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string text = 8;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string html = 9;
 * @return {string}
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.getHtml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.EmailDataParams} returns this
 */
proto.by.notificationemail.v1.EmailDataParams.prototype.setHtml = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.SmtpData.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.SmtpData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.SmtpData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SmtpData.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pass: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0),
    useStarttls: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.SmtpData}
 */
proto.by.notificationemail.v1.SmtpData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.SmtpData;
  return proto.by.notificationemail.v1.SmtpData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.SmtpData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.SmtpData}
 */
proto.by.notificationemail.v1.SmtpData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPass(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseStarttls(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.SmtpData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.SmtpData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.SmtpData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SmtpData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPass();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUseStarttls();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string user = 1;
 * @return {string}
 */
proto.by.notificationemail.v1.SmtpData.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SmtpData} returns this
 */
proto.by.notificationemail.v1.SmtpData.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pass = 2;
 * @return {string}
 */
proto.by.notificationemail.v1.SmtpData.prototype.getPass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SmtpData} returns this
 */
proto.by.notificationemail.v1.SmtpData.prototype.setPass = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.by.notificationemail.v1.SmtpData.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SmtpData} returns this
 */
proto.by.notificationemail.v1.SmtpData.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 port = 4;
 * @return {number}
 */
proto.by.notificationemail.v1.SmtpData.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.by.notificationemail.v1.SmtpData} returns this
 */
proto.by.notificationemail.v1.SmtpData.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool use_starttls = 5;
 * @return {boolean}
 */
proto.by.notificationemail.v1.SmtpData.prototype.getUseStarttls = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.by.notificationemail.v1.SmtpData} returns this
 */
proto.by.notificationemail.v1.SmtpData.prototype.setUseStarttls = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailData: (f = msg.getEmailData()) && proto.by.notificationemail.v1.EmailDataParams.toObject(includeInstance, f),
    smtpData: (f = msg.getSmtpData()) && proto.by.notificationemail.v1.SmtpData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest;
  return proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.by.notificationemail.v1.EmailDataParams;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailDataParams.deserializeBinaryFromReader);
      msg.setEmailData(value);
      break;
    case 2:
      var value = new proto.by.notificationemail.v1.SmtpData;
      reader.readMessage(value,proto.by.notificationemail.v1.SmtpData.deserializeBinaryFromReader);
      msg.setSmtpData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.by.notificationemail.v1.EmailDataParams.serializeBinaryToWriter
    );
  }
  f = message.getSmtpData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.by.notificationemail.v1.SmtpData.serializeBinaryToWriter
    );
  }
};


/**
 * optional EmailDataParams email_data = 1;
 * @return {?proto.by.notificationemail.v1.EmailDataParams}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.getEmailData = function() {
  return /** @type{?proto.by.notificationemail.v1.EmailDataParams} */ (
    jspb.Message.getWrapperField(this, proto.by.notificationemail.v1.EmailDataParams, 1));
};


/**
 * @param {?proto.by.notificationemail.v1.EmailDataParams|undefined} value
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} returns this
*/
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.setEmailData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} returns this
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.clearEmailData = function() {
  return this.setEmailData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.hasEmailData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SmtpData smtp_data = 2;
 * @return {?proto.by.notificationemail.v1.SmtpData}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.getSmtpData = function() {
  return /** @type{?proto.by.notificationemail.v1.SmtpData} */ (
    jspb.Message.getWrapperField(this, proto.by.notificationemail.v1.SmtpData, 2));
};


/**
 * @param {?proto.by.notificationemail.v1.SmtpData|undefined} value
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} returns this
*/
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.setSmtpData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest} returns this
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.clearSmtpData = function() {
  return this.setSmtpData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainRequest.prototype.hasSmtpData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.SendEmailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.SendEmailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.SendEmailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailData: (f = msg.getEmailData()) && proto.by.notificationemail.v1.EmailData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.SendEmailRequest}
 */
proto.by.notificationemail.v1.SendEmailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.SendEmailRequest;
  return proto.by.notificationemail.v1.SendEmailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.SendEmailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.SendEmailRequest}
 */
proto.by.notificationemail.v1.SendEmailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.by.notificationemail.v1.EmailData;
      reader.readMessage(value,proto.by.notificationemail.v1.EmailData.deserializeBinaryFromReader);
      msg.setEmailData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.SendEmailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.SendEmailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.SendEmailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.by.notificationemail.v1.EmailData.serializeBinaryToWriter
    );
  }
};


/**
 * optional EmailData email_data = 1;
 * @return {?proto.by.notificationemail.v1.EmailData}
 */
proto.by.notificationemail.v1.SendEmailRequest.prototype.getEmailData = function() {
  return /** @type{?proto.by.notificationemail.v1.EmailData} */ (
    jspb.Message.getWrapperField(this, proto.by.notificationemail.v1.EmailData, 1));
};


/**
 * @param {?proto.by.notificationemail.v1.EmailData|undefined} value
 * @return {!proto.by.notificationemail.v1.SendEmailRequest} returns this
*/
proto.by.notificationemail.v1.SendEmailRequest.prototype.setEmailData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.by.notificationemail.v1.SendEmailRequest} returns this
 */
proto.by.notificationemail.v1.SendEmailRequest.prototype.clearEmailData = function() {
  return this.setEmailData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.by.notificationemail.v1.SendEmailRequest.prototype.hasEmailData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.SendEmailInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.SendEmailInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    send: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.SendEmailInfoResponse}
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.SendEmailInfoResponse;
  return proto.by.notificationemail.v1.SendEmailInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.SendEmailInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.SendEmailInfoResponse}
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.SendEmailInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.SendEmailInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSend();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool send = 1;
 * @return {boolean}
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.prototype.getSend = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.by.notificationemail.v1.SendEmailInfoResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailInfoResponse.prototype.setSend = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.SendEmailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.SendEmailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    info: (f = msg.getInfo()) && proto.by.notificationemail.v1.SendEmailInfoResponse.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.SendEmailResponse}
 */
proto.by.notificationemail.v1.SendEmailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.SendEmailResponse;
  return proto.by.notificationemail.v1.SendEmailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.SendEmailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.SendEmailResponse}
 */
proto.by.notificationemail.v1.SendEmailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.by.notificationemail.v1.SendEmailInfoResponse;
      reader.readMessage(value,proto.by.notificationemail.v1.SendEmailInfoResponse.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.SendEmailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.SendEmailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.by.notificationemail.v1.SendEmailInfoResponse.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SendEmailResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SendEmailResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SendEmailInfoResponse info = 3;
 * @return {?proto.by.notificationemail.v1.SendEmailInfoResponse}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.getInfo = function() {
  return /** @type{?proto.by.notificationemail.v1.SendEmailInfoResponse} */ (
    jspb.Message.getWrapperField(this, proto.by.notificationemail.v1.SendEmailInfoResponse, 3));
};


/**
 * @param {?proto.by.notificationemail.v1.SendEmailInfoResponse|undefined} value
 * @return {!proto.by.notificationemail.v1.SendEmailResponse} returns this
*/
proto.by.notificationemail.v1.SendEmailResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.by.notificationemail.v1.SendEmailResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string error = 4;
 * @return {string}
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SendEmailResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    info: (f = msg.getInfo()) && proto.by.notificationemail.v1.SendEmailInfoResponse.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse;
  return proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.by.notificationemail.v1.SendEmailInfoResponse;
      reader.readMessage(value,proto.by.notificationemail.v1.SendEmailInfoResponse.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.by.notificationemail.v1.SendEmailInfoResponse.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SendEmailInfoResponse info = 3;
 * @return {?proto.by.notificationemail.v1.SendEmailInfoResponse}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.getInfo = function() {
  return /** @type{?proto.by.notificationemail.v1.SendEmailInfoResponse} */ (
    jspb.Message.getWrapperField(this, proto.by.notificationemail.v1.SendEmailInfoResponse, 3));
};


/**
 * @param {?proto.by.notificationemail.v1.SendEmailInfoResponse|undefined} value
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} returns this
*/
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string error = 4;
 * @return {string}
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse} returns this
 */
proto.by.notificationemail.v1.SendEmailWithCustomDomainResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.by.notificationemail.v1);
